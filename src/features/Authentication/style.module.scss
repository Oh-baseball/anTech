@use 'sass:map';
@use '../../styles/mixins' as *;

.authentication_container {
  width: 375px;
  max-width: 375px;
  display: flex;
  margin: 0 auto;
  box-sizing: border-box;
  flex-direction: column;
  background-color: $color-dark-bg;
  text-align: center;
  color: $color-bg;
}

.authentication_container {
  h3,
  h4 {
    height: 64px;
    @include flex-center;
    font-size: 18px;
    padding: 16px 20px;
    font-weight: $font-weight-semibold;
  }
}

.authentication_container h4 {
  padding: 20px;
}

main {
  margin-top: 105px;
}

.pattern_container {
  display: flex;
  flex-direction: column;
  gap: 10px;
  background-color: $color-dark-bg;
  padding: 0px 37.5px;
  color: $color-primary;
}

.patternRow {
  display: flex;
  gap: 40px;
}

.pattern_container_item {
  width: 100%;
  height: 70px;
  @include flex-center;
  background-color: $color-dark-bg;
  font-size: 24px;
  font-weight: 500;
}

.footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  //   border: 2px solid $color-bg;
  margin-bottom: 34px;

  button {
    width: 150px;
    height: 48px;
    border-radius: 10px;
    border: 1px solid $color-dark-bg;
    background-color: $color-dark-bg;
    color: $color-bg;
    font-size: 16px;
    font-weight: $font-weight-semibold;
    opacity: 0.7;
  }
  .footer_divider {
    width: 1px;
    height: 20px;
    background-color: $color-bg;
  }
}

$pattern-items: 1, 2, 3, 4, 5, 6, 7, 8, 9;

@each $number in $pattern-items {
  .pattern_container_item:nth-child(#{$number}) {
    &:hover {
      background-color: rgba(82, 142, 255, 0.1);
      transform: scale(1.05);
    }

    &.selected {
      background-color: $color-primary;
      color: $color-bg;
    }
  }
}

$button-types: (
  primary: (
    background: $color-primary,
    color: $color-bg,
    opacity: 1,
  ),
  secondary: (
    background: transparent,
    color: $color-bg,
    opacity: 0.7,
  ),
  disabled: (
    background: #333,
    color: #666,
    opacity: 0.5,
  ),
);

@each $type, $props in $button-types {
  .footer button.#{$type} {
    background-color: map.get($props, background);
    color: map.get($props, color);
    opacity: map.get($props, opacity);
  }
}

$screen-sizes: (
  small: (
    gap: 30px,
    item-height: 60px,
  ),
  medium: (
    gap: 40px,
    item-height: 70px,
  ),
  large: (
    gap: 50px,
    item-height: 80px,
  ),
);

@each $size, $props in $screen-sizes {
  .pattern_container.#{$size} {
    .patternRow {
      gap: map.get($props, gap);
    }

    .pattern_container_item {
      height: map.get($props, item-height);
    }
  }
}

@for $i from 1 through 9 {
  .pattern_container_item:nth-child(#{$i}) {
    animation-delay: #{$i * 0.1}s;
  }
}
